#PUSH
1. Define a function named push should accept a value.
2. Create a new node using the value passed to the function.
3. If there is no head property in the list, set the head and tail to be the newly created node.
4. Else, set the next property of the tail to be the new node and set the tail property to be the newly created node.
5. Increament the length by 1.
6. Return the list.

#POP
1. Define a function named pop with no arg passed (since it will always remove the last node in the list).
2. If there is no nodes in the list, return undefined.
3. Loop through the list until you reach the tail.
4. Set the next property of the 2nd to last node to be null.
5. Set the tail to be the 2nd to last node.
6. Decrement the length by 1.
7. Return the value of the node removed.

#SHIFT
1. Define a function named shift with no arg passed (since it will always remove the first node).
2. If there are no nodes, return undefined.
3. Store the current head property in a varaible.
4. Set the head property to be the current head's next property.
5. Decrement the length by 1.
6. Return the value of the node removed.

#UNSHIFT
1. Define a function named unshift which accepts a value.
2. Create a new node using the value passed to the function.
3. If there is no head property in the list, set the head and tail to be the newly created node.
4. Else, set the newly created node's next property to be the current head property on the list.
5. Set the head property in the list to be that newly created node.
6. Increment the length by 1.
7. Return the list.

#GET
1. Define a function named get which accepts an index.
2. If the index is lesser than zero or greater than or equal to length of the list return undefined.
3. Loop through the list until you reach the index and return the node at the specific index.
4. Return the current node.

#SET
1. Define a function named set which accepts an index and a value.
2. Use the get function to find the specific node.
3. If the node is not found return false.
4. If the node is found set the value of that node to be the value passed to the function and return true.
